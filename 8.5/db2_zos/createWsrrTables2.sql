-- begin_generated_IBM_copyright_prolog

-- Licensed Materials - Property of IBM
-- 
-- 5724-N72 5655-WBS
-- 
-- Copyright IBM Corp. 2009 All Rights Reserved.
-- 
-- US Government Users Restricted Rights - Use, duplication or
-- disclosure restricted by GSA ADP Schedule Contract with
-- IBM Corp.

-- end_generated_IBM_copyright_prolog

-----------------------------------------------------------------------
-- WebSphere Service Registry and Repository
-- Create the WSRR Activity Logging and Scheduler Tables
-----------------------------------------------------------------------
SET CURRENT SCHEMA = '@WSRR_DB_SCHEMA@' ;

-----------------------------------------------------------------------
-- DDL Statements for table SR_ANALYTICS
-----------------------------------------------------------------------
CREATE TABLESPACE WSRRPOL1
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.SR_ANALYTICS (
  EVENT BLOB(1048576),
  SOURCE_COMPONENT_ID VARCHAR(1020),
  REPORTER_COMPONENT_ID VARCHAR(1020),
  SITUATION INTEGER,
  CREATION_TIME TIMESTAMP NOT NULL,
  EXTENSION_NAME VARCHAR(1024),
  VERSION VARCHAR(16),
  MSG_DATA_ELEMENT_MSGLOCALE VARCHAR(11),
  MSG_DATA_ELEMENT_MSGCATLOGTKNS VARCHAR(4000),
  MSG_DATA_ELEMENT_MSGID VARCHAR(256),
  MSG_DATA_ELEMENT_MSGIDTYPE VARCHAR(32),
  MSG_DATA_ELEMENT_MSGCATALOGID VARCHAR(128),
  MSG_DATA_ELEMENT_MSGCATLOGTYPE VARCHAR(32),
  MSG_DATA_ELEMENT_MSGCATALOG VARCHAR(128),
  SITUATION_CATEGORYNAME VARCHAR(20) DEFAULT 'ReportSituation',
  SITUATION_REPORTCATEGORY CHAR(5) DEFAULT 'Log',
  GLOBAL_INSTANCE_ID VARCHAR(48) NOT NULL )
  IN @WSRR_DB_NAME@.WSRRPOL1 ;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.SR_ANALYTICS_IDX
  ON @WSRR_DB_SCHEMA@.SR_ANALYTICS (
  GLOBAL_INSTANCE_ID)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_ANALYTICS
  ADD CONSTRAINT SR_ANALYTICS_PK
  PRIMARY KEY (GLOBAL_INSTANCE_ID) ;
  
CREATE INDEX @WSRR_DB_SCHEMA@.SR_ANALYTICS_VER_IDX
  ON @WSRR_DB_SCHEMA@.SR_ANALYTICS (VERSION)
  USING STOGROUP @WSRR_DB_STOGRP@;

CREATE LOB TABLESPACE WSRRPOL2
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE LOB
  BUFFERPOOL BP3 ;

CREATE AUX TABLE @WSRR_DB_SCHEMA@.SR_ANALYTICSAUX
  IN @WSRR_DB_NAME@.WSRRPOL2
  STORES SR_ANALYTICS COLUMN EVENT ;

CREATE INDEX @WSRR_DB_SCHEMA@.SR_ANALYTICSAUX_IDX
  ON @WSRR_DB_SCHEMA@.SR_ANALYTICSAUX
  USING
  STOGROUP @WSRR_DB_STOGRP@
  BUFFERPOOL BP2 ;

-----------------------------------------------------------------------
-- DDL Statements for table SR_ASSERTION
-----------------------------------------------------------------------
CREATE TABLESPACE WSRRPOL3
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.SR_ASSERTION (
  GLOBAL_INSTANCE_ID VARCHAR(48) NOT NULL,
  ASSERTION_TYPE VARCHAR(40) NOT NULL,
  ASSERTION_ID VARCHAR(120),
  ASSERTION_NAME VARCHAR(120),
  STATUS CHAR(1) DEFAULT '0' NOT NULL )
  IN @WSRR_DB_NAME@.WSRRPOL3 ;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.SR_ASSERTION_IDX
  ON @WSRR_DB_SCHEMA@.SR_ASSERTION (
  GLOBAL_INSTANCE_ID)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_ASSERTION
  ADD CONSTRAINT SR_ASSERTION_PK
  PRIMARY KEY (GLOBAL_INSTANCE_ID) ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_ASSERTION
  ADD CONSTRAINT ASSN_ANYTCS_FK
  FOREIGN KEY (GLOBAL_INSTANCE_ID)
  REFERENCES @WSRR_DB_SCHEMA@.SR_ANALYTICS (GLOBAL_INSTANCE_ID)
  ON DELETE CASCADE ;

-----------------------------------------------------------------------
-- DDL Statements for table SR_ASSOCIATED
-----------------------------------------------------------------------
CREATE TABLESPACE WSRRPOL4
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.SR_ASSOCIATED (
  RESOLVED_RECORD VARCHAR(48) NOT NULL,
  GLOBAL_INSTANCE_ID VARCHAR(48) NOT NULL )
  IN @WSRR_DB_NAME@.WSRRPOL4 ;

CREATE INDEX @WSRR_DB_SCHEMA@.SR_ASSOCIATED_IDX
  ON @WSRR_DB_SCHEMA@.SR_ASSOCIATED (
  GLOBAL_INSTANCE_ID)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_ASSOCIATED
  ADD CONSTRAINT ASSCTD_ANLYTICS_FK
  FOREIGN KEY (GLOBAL_INSTANCE_ID)
  REFERENCES @WSRR_DB_SCHEMA@.SR_ANALYTICS (GLOBAL_INSTANCE_ID)
  ON DELETE CASCADE;

-----------------------------------------------------------------------
-- DDL Statements for table SR_ENTITYACTION
-----------------------------------------------------------------------
CREATE TABLESPACE WSRRPOL5
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.SR_ENTITYACTION (
  OPERATION VARCHAR(20),
  ENTITY_TYPE VARCHAR(1020),
  USERID VARCHAR(64),
  ROLE CHAR(254),
  ENTITY_BSRURI VARCHAR(48),
  TRANSITION_URI VARCHAR(1020),
  GLOBAL_INSTANCE_ID VARCHAR(48) NOT NULL)
  IN @WSRR_DB_NAME@.WSRRPOL5 ;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.SR_ENTITYACTION
  ON @WSRR_DB_SCHEMA@.SR_ENTITYACTION (
  GLOBAL_INSTANCE_ID)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_ENTITYACTION
  ADD CONSTRAINT SR_ENTITYACTION_PK
  PRIMARY KEY (GLOBAL_INSTANCE_ID) ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_ENTITYACTION
  ADD CONSTRAINT ENTYUPD_ANYTCS_FK
  FOREIGN KEY (GLOBAL_INSTANCE_ID)
  REFERENCES @WSRR_DB_SCHEMA@.SR_ANALYTICS (GLOBAL_INSTANCE_ID)
  ON DELETE CASCADE ;

-----------------------------------------------------------------------
-- DDL Statements for table SR_VALDTRPOLICY
-----------------------------------------------------------------------
CREATE TABLESPACE WSRRPOL6
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.SR_VALDTRPOLICY (
  GLOBAL_INSTANCE_ID VARCHAR(48) NOT NULL,
  POLICYDOMAIN VARCHAR(1020),
  POLICYID VARCHAR(1020),
  POLICYCLASS VARCHAR(1020),
  STATUS CHAR(1) DEFAULT '0' NOT NULL,
  POLICYNAME VARCHAR(1020),
  POLICYURI VARCHAR(1020),
  CREATION_TIME TIMESTAMP NOT NULL)
  IN @WSRR_DB_NAME@.WSRRPOL6 ;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.SR_VALDTRPOLICY
  ON @WSRR_DB_SCHEMA@.SR_VALDTRPOLICY (
  GLOBAL_INSTANCE_ID)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_VALDTRPOLICY
  ADD CONSTRAINT SR_VALDTRPOLICY_PK
  PRIMARY KEY (GLOBAL_INSTANCE_ID) ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_VALDTRPOLICY
  ADD CONSTRAINT VALDPLCY_ANYTCS_FK
  FOREIGN KEY (GLOBAL_INSTANCE_ID)
  REFERENCES @WSRR_DB_SCHEMA@.SR_ANALYTICS (GLOBAL_INSTANCE_ID)
  ON DELETE CASCADE ;

-----------------------------------------------------------------------
-- DDL Statements for table SR_WMB_POLICY
-----------------------------------------------------------------------
CREATE TABLESPACE WSRRPOL7
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.SR_WMB_POLICY (
	GLOBAL_INSTANCE_ID VARCHAR(48) NOT NULL,
	TOTAL_RECEIPTS DECIMAL(19,0) NOT NULL,
	TOTAL_RECEIPT_SUCCESS DECIMAL(19,0) NOT NULL,
	TOTAL_RECEIPT_FAULTS DECIMAL(19,0) NOT NULL,
	TOTAL_REPLIES DECIMAL(19,0) NOT NULL,
	TOTAL_REPLY_SUCCESS DECIMAL(19,0) NOT NULL,
	TOTAL_REPLY_FAULTS DECIMAL(19,0) NOT NULL,
	POLICY_SET_NAME VARCHAR(1024),
	BROKER_NAME VARCHAR(1024) NOT NULL,
	BROKER_UUID VARCHAR(36) NOT NULL,
	EXGRP_NAME VARCHAR(1024) NOT NULL,
	EXGRP_UUID VARCHAR(36) NOT NULL,
	FLOW_DEPLOYED VARCHAR(1) NOT NULL,
	FLOW_NAME VARCHAR(1024) NOT NULL,
	NODE_NAME VARCHAR(1024) NOT NULL,
	OPERATION_NAME VARCHAR(1024) NOT NULL,
	RESET_TIME TIMESTAMP NOT NULL,
	INTERVAL_START_TIME TIMESTAMP NOT NULL,
	INTERVAL_END_TIME TIMESTAMP NOT NULL,
	CHECK (FLOW_DEPLOYED IN ('0','1')) )
	IN @WSRR_DB_NAME@.WSRRPOL7;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.SR_WMB_POLICY
  ON @WSRR_DB_SCHEMA@.SR_WMB_POLICY (
  GLOBAL_INSTANCE_ID)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;
  
ALTER TABLE @WSRR_DB_SCHEMA@.SR_WMB_POLICY
  ADD CONSTRAINT SR_WMB_POLICY_PK 
  PRIMARY KEY (GLOBAL_INSTANCE_ID) ;

ALTER TABLE @WSRR_DB_SCHEMA@.SR_WMB_POLICY
  ADD CONSTRAINT ASSN_SR_WMB_POLICY_FK 
  FOREIGN KEY (GLOBAL_INSTANCE_ID)
  REFERENCES @WSRR_DB_SCHEMA@.SR_ANALYTICS (GLOBAL_INSTANCE_ID)
  ON DELETE CASCADE ;

-----------------------------------------------------------------------
-- DDL Statements for tablespaces
-----------------------------------------------------------------------
CREATE TABLESPACE WSRRSHD
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE LOB TABLESPACE WSRRSHD1
  IN @WSRR_DB_NAME@
  USING STOGROUP @WSRR_DB_STOGRP@ 
    PRIQTY -1
    SECQTY -1 ;

-----------------------------------------------------------------------
-- DDL Statements for table TASK
-----------------------------------------------------------------------
CREATE TABLE @WSRR_DB_SCHEMA@.WSRRTASK (
  TASKID           NUMERIC(19)    NOT NULL ,
  VERSION          VARCHAR(5)     NOT NULL ,
  ROW_VERSION      INTEGER        NOT NULL ,
  TASKTYPE         INTEGER        NOT NULL ,
  TASKSUSPENDED    SMALLINT       NOT NULL ,
  CANCELLED        SMALLINT       NOT NULL ,
  NEXTFIRETIME     NUMERIC(19)    NOT NULL ,
  STARTBYINTERVAL  VARCHAR(254)    ,
  STARTBYTIME      NUMERIC(19)     ,
  VALIDFROMTIME    NUMERIC(19)     ,
  VALIDTOTIME      NUMERIC(19)     ,
  REPEATINTERVAL   VARCHAR(254)    ,
  MAXREPEATS       INTEGER        NOT NULL ,
  REPEATSLEFT      INTEGER        NOT NULL ,
  TASKINFO         BLOB(102400)    ,
  NAME             VARCHAR(254)   NOT NULL ,
  AUTOPURGE        INTEGER        NOT NULL ,
  FAILUREACTION    INTEGER         ,
  MAXATTEMPTS      INTEGER         ,
  QOS              INTEGER         ,
  PARTITIONID      INTEGER         ,
  OWNERTOKEN       VARCHAR(200)   NOT NULL ,
  CREATETIME       NUMERIC(19)    NOT NULL ,
  ROW_ID           ROWID          NOT NULL GENERATED ALWAYS,
  PRIMARY KEY ( TASKID ))
  IN @WSRR_DB_NAME@.WSRRSHD ;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.WSRRTASKPK
  ON @WSRR_DB_SCHEMA@.WSRRTASK (
  TASKID)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

CREATE INDEX @WSRR_DB_SCHEMA@.WSRRTASK_IDX1
  ON @WSRR_DB_SCHEMA@.WSRRTASK (
  TASKID,OWNERTOKEN)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

CREATE INDEX @WSRR_DB_SCHEMA@.WSRRTASK_IDX2
  ON @WSRR_DB_SCHEMA@.WSRRTASK (
  NEXTFIRETIME ASC, REPEATSLEFT, PARTITIONID)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

CREATE AUX TABLE @WSRR_DB_SCHEMA@.WSRRTASK1
  IN @WSRR_DB_NAME@.WSRRSHD1
  STORES @WSRR_DB_SCHEMA@.WSRRTASK
  COLUMN TASKINFO ;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.WSRRTASK1I
  ON @WSRR_DB_SCHEMA@.WSRRTASK1
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

-----------------------------------------------------------------------
-- DDL Statements for table TREG
-----------------------------------------------------------------------
CREATE TABLE @WSRR_DB_SCHEMA@.WSRRTREG (
  REGKEY                       VARCHAR(254)         NOT NULL ,
  REGVALUE                     VARCHAR(254)         ,
  PRIMARY KEY ( REGKEY ))
  IN @WSRR_DB_NAME@.WSRRSHD ;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.WSRRTREGPK
  ON @WSRR_DB_SCHEMA@.WSRRTREG(
  REGKEY)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

-----------------------------------------------------------------------
-- DDL Statements for table LMGR
-----------------------------------------------------------------------
CREATE TABLE @WSRR_DB_SCHEMA@.WSRRLMGR (
  LEASENAME                         VARCHAR(254) NOT NULL,
  LEASEOWNER                        VARCHAR(254) NOT NULL,
  LEASE_EXPIRE_TIME                 NUMERIC(19),
  DISABLED                          VARCHAR(5),
  PRIMARY KEY ( LEASENAME ))
  IN @WSRR_DB_NAME@.WSRRSHD ;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.WSRRLMGR_IDX1
  ON @WSRR_DB_SCHEMA@.WSRRLMGR(
  LEASENAME)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;

-----------------------------------------------------------------------
-- DDL Statements for table LMPR
-----------------------------------------------------------------------
CREATE TABLE @WSRR_DB_SCHEMA@.WSRRLMPR (
  LEASENAME                         VARCHAR(254) NOT NULL,
  NAME                              VARCHAR(254) NOT NULL,
  VALUE                             VARCHAR(254) NOT NULL)
  IN @WSRR_DB_NAME@.WSRRSHD ;

CREATE INDEX @WSRR_DB_SCHEMA@.WSRRLMPR_IDX1
  ON @WSRR_DB_SCHEMA@.WSRRLMPR(
  LEASENAME)
  USING
  STOGROUP @WSRR_DB_STOGRP@ ;


-----------------------------------------------------------------------
-- DDL Statements for table UPGRADESTATUSRECORD
-----------------------------------------------------------------------
CREATE TABLESPACE UPGRADE1
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.UPGRADESTATUSRECORD  (
		  ID INTEGER NOT NULL WITH DEFAULT 1,
		  COMPONENT INTEGER NOT NULL WITH DEFAULT 0, 
		  SUBCOMPONENT VARCHAR(1024),
		  STATUS INTEGER NOT NULL WITH DEFAULT 0,  
		  TOTAL NUMERIC(19) NOT NULL WITH DEFAULT 0 , 
		  PROCESSED NUMERIC(19) NOT NULL WITH DEFAULT 0 , 
		  PERCENTAGE INT NOT NULL WITH DEFAULT 0,   
		  CONFIGFILE BLOB (548576),
		  COMPONENTINFO BLOB(4096)
		  ) IN @WSRR_DB_NAME@.UPGRADE1 ;

-----------------------------------------------------------------------
-- DDL Statements for table UPGRADEEXCEPTIONS
-----------------------------------------------------------------------
CREATE TABLESPACE UPGRADE2
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.UPGRADEEXCEPTIONS (
		  BSRURI VARCHAR(1024) NOT NULL,
		  EXCEPTIONTIME TIMESTAMP NOT NULL,
		  SEVERITY INTEGER NOT NULL WITH DEFAULT 0, 
		  COMPONENT INTEGER NOT NULL WITH DEFAULT 0, 
		  SUBCOMPONENT VARCHAR(1024),
		  UPGRADEEXCEPTION BLOB (548576)
		  ) IN @WSRR_DB_NAME@.UPGRADE2 ;



-----------------------------------------------------------------------
-- BLOB content
-----------------------------------------------------------------------

CREATE LOB TABLESPACE BLUPGTS1
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE LOB
  BUFFERPOOL BP3 ;

CREATE AUX TABLE @WSRR_DB_SCHEMA@.BLOBUSR_AUX1
  IN @WSRR_DB_NAME@.BLUPGTS1
  STORES @WSRR_DB_SCHEMA@.UPGRADESTATUSRECORD COLUMN CONFIGFILE ;

CREATE LOB TABLESPACE BLUPGTS2
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE LOB
  BUFFERPOOL BP3 ;

CREATE AUX TABLE @WSRR_DB_SCHEMA@.BLOBUSR_AUX2
  IN @WSRR_DB_NAME@.BLUPGTS2
  STORES @WSRR_DB_SCHEMA@.UPGRADESTATUSRECORD COLUMN COMPONENTINFO ;

CREATE LOB TABLESPACE BLUPGTS3
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE LOB
  BUFFERPOOL BP3 ;


CREATE AUX TABLE @WSRR_DB_SCHEMA@.BLOBUES_AUX
  IN @WSRR_DB_NAME@.BLUPGTS3
  STORES @WSRR_DB_SCHEMA@.UPGRADEEXCEPTIONS COLUMN UPGRADEEXCEPTION ;


CREATE INDEX @WSRR_DB_SCHEMA@.BLOBUSR_AUX1_IDX
  ON @WSRR_DB_SCHEMA@.BLOBUSR_AUX1
  USING
  STOGROUP @WSRR_DB_STOGRP@
  BUFFERPOOL BP2 ;

CREATE INDEX @WSRR_DB_SCHEMA@.BLOBUSR_AUX2_IDX
  ON @WSRR_DB_SCHEMA@.BLOBUSR_AUX2
  USING
  STOGROUP @WSRR_DB_STOGRP@
  BUFFERPOOL BP2 ;


CREATE INDEX @WSRR_DB_SCHEMA@.BLOBUES_AUX_IDX
  ON @WSRR_DB_SCHEMA@.BLOBUES_AUX
  USING
  STOGROUP @WSRR_DB_STOGRP@
  BUFFERPOOL BP2 ;


 
-----------------------------------------------------------------------
-- DDL Statements for table UPGRADEOBJECTHISTORY
-----------------------------------------------------------------------
CREATE TABLESPACE UPGRADE3
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.UPGRADEOBJECTHISTORY (
		  BSRURI VARCHAR(1024) NOT NULL,
		  STATUSTIME TIMESTAMP NOT NULL,
		  STATUS VARCHAR(1024) NOT NULL
		  ) IN @WSRR_DB_NAME@.UPGRADE3 ;
		
-----------------------------------------------------------------------
-- DDL Statements for table UPGRADEOBJECTSTATUS
-----------------------------------------------------------------------
CREATE TABLESPACE UPGRADE4
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.UPGRADEOBJECTSTATUS (
		  BSRURI VARCHAR(1024) NOT NULL,
		  STATUSTIME TIMESTAMP NOT NULL,
		  STATUS VARCHAR(1024) NOT NULL
		  ) IN @WSRR_DB_NAME@.UPGRADE4 ;

-----------------------------------------------------------------------
-- DDL Statements for table UPGRADEOBJECTHISTORY
-----------------------------------------------------------------------
CREATE TABLESPACE UPGRADE5
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;

CREATE TABLE @WSRR_DB_SCHEMA@.UPGRADECOMPONENTS (
		  COMPONENT INTEGER NOT NULL WITH DEFAULT 0, 
		  SUBCOMPONENT VARCHAR(1024),
		  STARTTIME TIMESTAMP NOT NULL,
		  ENDTIME TIMESTAMP,
		  DURATION NUMERIC(19) NOT NULL WITH DEFAULT 0, 
		  TOTAL NUMERIC(19) NOT NULL WITH DEFAULT 0 
		  ) IN @WSRR_DB_NAME@.UPGRADE5 ;
 
-----------------------------------------------------------------------
-- DDL Statements for table VERIFY
-----------------------------------------------------------------------
CREATE TABLE @WSRR_DB_SCHEMA@.VERIFY ( VERIFY VARCHAR(60) )
       IN @WSRR_DB_NAME@.STATEMTS;
       
-----------------------------------------------------------------------
-- DDL Statements for CRE
-----------------------------------------------------------------------

CREATE TABLESPACE UITS
  IN @WSRR_DB_NAME@
  USING
  STOGROUP @WSRR_DB_STOGRP@
    PRIQTY -1
    SECQTY -1
  LOCKSIZE ROW
  CCSID UNICODE ;
  
CREATE LOB TABLESPACE CRELOB
	IN @WSRR_DB_NAME@
	USING
	STOGROUP @WSRR_DB_STOGRP@
	  PRIQTY -1
      SECQTY -1
	LOCKSIZE LOB
	BUFFERPOOL BP3 ;
  
CREATE TABLE @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA (
    ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    DATA CLOB(1M), 
    PRIMARY KEY (ID)
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.I_LRG_CDT_ID ON @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA
(ID ASC);

CREATE AUX TABLE @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA_DATA
	IN @WSRR_DB_NAME@.CRELOB
	STORES @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA COLUMN DATA;
	
CREATE INDEX @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA_DATA_IDX ON @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA_DATA
    USING
        STOGROUP @WSRR_DB_STOGRP@
        BUFFERPOOL BP3 ;
	
CREATE TABLE @WSRR_DB_SCHEMA@.CRE_PAGE (
    ID VARCHAR(254) NOT NULL, 
    PRIMARY KEY (ID)
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.I_PAGE ON @WSRR_DB_SCHEMA@.CRE_PAGE 
(ID ASC);

CREATE TABLE @WSRR_DB_SCHEMA@.CRE_STATE_ITEM (
    ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    LOCALE VARCHAR(254), 
    LOCALIZED_VALUE VARCHAR(1000), 
    NAME VARCHAR(254), 
    READ_ONLY SMALLINT, 
    VALUE VARCHAR(1000), 
    STATE_SET_ID VARCHAR(254) NOT NULL, 
    LOCALIZED_VALUE_DATA_ID BIGINT, 
    VALUE_DATA_ID BIGINT, 
    PRIMARY KEY (ID)
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.I_STT_ITM_ID ON @WSRR_DB_SCHEMA@.CRE_STATE_ITEM
	(ID ASC);

CREATE INDEX @WSRR_DB_SCHEMA@.I_STT_ITM_LOCALIZE ON @WSRR_DB_SCHEMA@.CRE_STATE_ITEM
    (LOCALIZED_VALUE_DATA_ID ASC);

CREATE INDEX @WSRR_DB_SCHEMA@.I_STT_ITM_STATESET ON @WSRR_DB_SCHEMA@.CRE_STATE_ITEM
    (STATE_SET_ID ASC);

CREATE INDEX @WSRR_DB_SCHEMA@.I_STT_ITM_VALUEDAT ON @WSRR_DB_SCHEMA@.CRE_STATE_ITEM
    (VALUE_DATA_ID ASC);

CREATE TABLE @WSRR_DB_SCHEMA@.CRE_STATE_SET (
    ID VARCHAR(254) NOT NULL, 
    DEFINITION_URL VARCHAR(1000), 
    LAST_CONFIG_UPDATED TIMESTAMP, 
    IS_MODE VARCHAR(254), 
    NAME VARCHAR(254), 
    USERNAME VARCHAR(254) NOT NULL,
    WIDGET_ID VARCHAR(254) NOT NULL, 
    PRIMARY KEY (ID),
    CONSTRAINT U_CR_S_ST_USERNAME UNIQUE (USERNAME, WIDGET_ID)
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.I_STT_SET_ID ON @WSRR_DB_SCHEMA@.CRE_STATE_SET
	(ID ASC);
	
CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.I_STT_SET_WIDGET_ID_USNM ON @WSRR_DB_SCHEMA@.CRE_STATE_SET
	(USERNAME,WIDGET_ID ASC);
	
CREATE INDEX @WSRR_DB_SCHEMA@.I_STATESET ON @WSRR_DB_SCHEMA@.CRE_STATE_SET
	(DEFINITION_URL, IS_MODE, NAME);

CREATE TABLE @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE (
    ID VARCHAR(254) NOT NULL, 
    DEFINITION_URL VARCHAR(1000), 
    WIDGET_TYPE VARCHAR(254), 
    DOCUMENT_ID VARCHAR(254), 
    HASHED_DOMAIN SMALLINT, 
    PARENT_ID VARCHAR(254), 
    DOM_PLACEMENT VARCHAR(254), 
    RENDER_TYPE VARCHAR(254), 
    PAGE_ID VARCHAR(254) NOT NULL, 
    PRIMARY KEY (ID)
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.I_WDGTTNC_ID ON @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE
    (ID ASC);

CREATE INDEX @WSRR_DB_SCHEMA@.I_WDGTTNC_PAGE ON @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE
    (PAGE_ID ASC);

CREATE TABLE @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE_CRE_WIRE (
    WIDGETINSTANCE_ID VARCHAR(254), 
    WIRES_ID BIGINT
) IN @WSRR_DB_NAME@.UITS;

CREATE INDEX @WSRR_DB_SCHEMA@.I_WDGT_WR_ELEMENT ON @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE_CRE_WIRE
    (WIRES_ID ASC);

CREATE INDEX @WSRR_DB_SCHEMA@.I_WDGT_WR_WIDGETIN ON @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE_CRE_WIRE
    (WIDGETINSTANCE_ID ASC);

CREATE TABLE @WSRR_DB_SCHEMA@.CRE_WIRE (
    ID BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
    SOURCE_EVENT VARCHAR(254), 
    SOURCE_WIDGET VARCHAR(254), 
    TARGET_EVENT VARCHAR(254), 
    TARGET_WIDGET VARCHAR(254), 
    WIDGET_ID VARCHAR(254) NOT NULL, 
    PRIMARY KEY (ID)
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.I_WIRE_ID ON @WSRR_DB_SCHEMA@.CRE_WIRE
    (ID ASC);

CREATE INDEX @WSRR_DB_SCHEMA@.I_WIRE_WIDGETINSTA ON @WSRR_DB_SCHEMA@.CRE_WIRE 
(WIDGET_ID ASC);

CREATE INDEX @WSRR_DB_SCHEMA@.I_WIRE_SOURCEWID ON @WSRR_DB_SCHEMA@.CRE_WIRE
    (SOURCE_WIDGET ASC);
    
CREATE INDEX @WSRR_DB_SCHEMA@.I_WIRE_TARGETWID ON @WSRR_DB_SCHEMA@.CRE_WIRE
    (TARGET_WIDGET ASC);

ALTER TABLE @WSRR_DB_SCHEMA@.CRE_STATE_ITEM ADD FOREIGN KEY (STATE_SET_ID) REFERENCES @WSRR_DB_SCHEMA@.CRE_STATE_SET (ID);

ALTER TABLE @WSRR_DB_SCHEMA@.CRE_STATE_ITEM ADD FOREIGN KEY (LOCALIZED_VALUE_DATA_ID) REFERENCES @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA (ID);

ALTER TABLE @WSRR_DB_SCHEMA@.CRE_STATE_ITEM ADD FOREIGN KEY (VALUE_DATA_ID) REFERENCES @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA (ID);

ALTER TABLE @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE ADD FOREIGN KEY (PAGE_ID) REFERENCES @WSRR_DB_SCHEMA@.CRE_PAGE (ID);

ALTER TABLE @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE_CRE_WIRE ADD FOREIGN KEY (WIDGETINSTANCE_ID) REFERENCES @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE (ID);

ALTER TABLE @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE_CRE_WIRE ADD FOREIGN KEY (WIRES_ID) REFERENCES @WSRR_DB_SCHEMA@.CRE_WIRE (ID);

ALTER TABLE @WSRR_DB_SCHEMA@.CRE_WIRE ADD FOREIGN KEY (WIDGET_ID) REFERENCES @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE (ID);

ALTER TABLE @WSRR_DB_SCHEMA@.CRE_STATE_SET ADD FOREIGN KEY (WIDGET_ID) REFERENCES @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE (ID);

-- UI Persistence Store
CREATE TABLE @WSRR_DB_SCHEMA@.UIUSER (
    HASH BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(768) NOT NULL,
    LASTVIEWEDVIEW VARCHAR(64),
	LASTVIEWEDPAGE VARCHAR(64),
	ISGROUP SMALLINT NOT NULL,
	NOWELCOME SMALLINT NOT NULL,
	CONSTRAINT BOOL CHECK(ISGROUP IN (0, 1, 2)),
	CONSTRAINT BOOL2 CHECK(NOWELCOME IN (0, 1)),
	CONSTRAINT NAME_ISGRP UNIQUE (NAME, ISGROUP)
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.UV_USER_HASH ON @WSRR_DB_SCHEMA@.UIUSER
	(HASH ASC);

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.UIUSER_IN ON @WSRR_DB_SCHEMA@.UIUSER
    (NAME, ISGROUP);

CREATE TABLE @WSRR_DB_SCHEMA@.USERVIEWPERM (
    USER_ID BIGINT NOT NULL REFERENCES UIUSER (HASH) ON DELETE CASCADE,
    VIEW_ID VARCHAR(64) NOT NULL,
    EDIT SMALLINT NOT NULL,
    PRIMARY KEY (USER_ID, VIEW_ID),
    CONSTRAINT BOOL CHECK(EDIT IN (0, 1))
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.UV_VIEW ON @WSRR_DB_SCHEMA@.USERVIEWPERM
    (USER_ID,VIEW_ID);

CREATE VIEW @WSRR_DB_SCHEMA@.USERVIEWPERM_VW AS
	SELECT PERM.USER_ID AS USER_ID, users.NAME AS NAME, PERM.VIEW_ID AS VIEW_ID, perm.EDIT AS EDIT, users.ISGROUP as ISGROUP
	FROM @WSRR_DB_SCHEMA@.USERVIEWPERM PERM
	INNER JOIN @WSRR_DB_SCHEMA@.UIUSER USERS
	ON PERM.USER_ID = USERS.HASH;

CREATE TABLE @WSRR_DB_SCHEMA@.UISTATUSFLAG (
    NAME VARCHAR(64) NOT NULL PRIMARY KEY,
    STATUS VARCHAR(1000) NOT NULL
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.UI_ST_FLG_ID ON @WSRR_DB_SCHEMA@.UISTATUSFLAG
	(NAME ASC);

INSERT INTO @WSRR_DB_SCHEMA@.UISTATUSFLAG VALUES ('READONLY', '0');
INSERT INTO @WSRR_DB_SCHEMA@.UISTATUSFLAG VALUES ('SHOWWELCOME','0');

CREATE TABLE @WSRR_DB_SCHEMA@.UIUSERSTORAGE (
	USERNAME VARCHAR(768) NOT NULL,
	USERDATA CLOB(1M),
	PRIMARY KEY (USERNAME)
) IN @WSRR_DB_NAME@.UITS;

CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.UI_USR_STG_ID ON @WSRR_DB_SCHEMA@.UIUSERSTORAGE
	(USERNAME ASC);

CREATE LOB TABLESPACE UISTORAG
	IN @WSRR_DB_NAME@
	USING
	STOGROUP @WSRR_DB_STOGRP@
	  PRIQTY -1
      SECQTY -1
	LOCKSIZE LOB
	BUFFERPOOL BP3 ;

CREATE AUX TABLE @WSRR_DB_SCHEMA@.UIUSERSTORAGE_USERDATA
	IN @WSRR_DB_NAME@.UISTORAG
	STORES @WSRR_DB_SCHEMA@.UIUSERSTORAGE COLUMN USERDATA;

CREATE INDEX @WSRR_DB_SCHEMA@.UIUSERSTORAGE_USERDATA_IDX ON @WSRR_DB_SCHEMA@.UIUSERSTORAGE_USERDATA
    USING
        STOGROUP @WSRR_DB_STOGRP@
        BUFFERPOOL BP2 ;
	
CREATE TABLE @WSRR_DB_SCHEMA@.DEFAULTPERM (
    USER_ID BIGINT NOT NULL REFERENCES UIUSER (HASH) ON DELETE CASCADE,
    EDIT SMALLINT NOT NULL,
    PRIMARY KEY (USER_ID),
    CONSTRAINT BOOL CHECK(EDIT IN (0, 1))
) IN @WSRR_DB_NAME@.UITS;


CREATE UNIQUE INDEX @WSRR_DB_SCHEMA@.DEF_VIEW ON @WSRR_DB_SCHEMA@.DEFAULTPERM
    (USER_ID ASC);
    
CREATE VIEW DEFAULTPERM_VW AS
	SELECT perm.USER_ID as USER_ID, users.NAME AS NAME, perm.EDIT AS EDIT, users.ISGROUP as ISGROUP
	FROM @WSRR_DB_SCHEMA@.DEFAULTPERM perm
	INNER JOIN @WSRR_DB_SCHEMA@.UIUSER users
	ON perm.USER_ID = users.HASH;

INSERT INTO @WSRR_DB_SCHEMA@.UIUSER (NAME, LASTVIEWEDVIEW, LASTVIEWEDPAGE, ISGROUP, NOWELCOME) VALUES ('ALL_AUTHENTICATED','','',1, 0);
INSERT INTO @WSRR_DB_SCHEMA@.DEFAULTPERM SELECT MAX(HASH), 0 FROM @WSRR_DB_SCHEMA@.UIUSER;
INSERT INTO @WSRR_DB_SCHEMA@.UIUSER (NAME, LASTVIEWEDVIEW, LASTVIEWEDPAGE, ISGROUP, NOWELCOME) VALUES ('WSRRAdmin','','',2, 0);
INSERT INTO @WSRR_DB_SCHEMA@.DEFAULTPERM SELECT MAX(HASH), 1 FROM @WSRR_DB_SCHEMA@.UIUSER;
-----------------------------------------------------------------------
-- DDL Statements for grants
-----------------------------------------------------------------------
SET CURRENT RULES = 'STD' ;
 
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.SR_ANALYTICS
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.SR_ASSERTION
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.SR_ASSOCIATED
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.SR_ENTITYACTION
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.SR_VALDTRPOLICY
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.SR_WMB_POLICY
  TO @WSRR_DB_USER@ ;

GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.WSRRTASK
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.WSRRTREG
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.WSRRLMGR
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.WSRRLMPR
  TO @WSRR_DB_USER@ ;

GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.UPGRADESTATUSRECORD
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.UPGRADEEXCEPTIONS
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.UPGRADEOBJECTHISTORY
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.UPGRADEOBJECTSTATUS
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.UPGRADECOMPONENTS
  TO @WSRR_DB_USER@ ;

GRANT SELECT,INSERT,DELETE
  ON @WSRR_DB_SCHEMA@.VERIFY
  TO @WSRR_DB_USER@ ;
 
GRANT SELECT,INSERT,UPDATE,DELETE,ALTER
  ON @WSRR_DB_SCHEMA@.CRE_LARGE_CDATA
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.CRE_PAGE
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE,ALTER
  ON @WSRR_DB_SCHEMA@.CRE_STATE_ITEM
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.CRE_STATE_SET
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.CRE_WIDGET_INSTANCE_CRE_WIRE
  TO @WSRR_DB_USER@ ;
GRANT SELECT,INSERT,UPDATE,DELETE,ALTER
  ON @WSRR_DB_SCHEMA@.CRE_WIRE
  TO @WSRR_DB_USER@ ;

GRANT SELECT,INSERT,UPDATE,DELETE,ALTER 
  ON @WSRR_DB_SCHEMA@.UIUSER          
  TO @WSRR_DB_USER@;
GRANT SELECT,INSERT,UPDATE,DELETE 
  ON @WSRR_DB_SCHEMA@.USERVIEWPERM  
  TO @WSRR_DB_USER@;
GRANT SELECT,INSERT,UPDATE,DELETE 
  ON @WSRR_DB_SCHEMA@.DEFAULTPERM  
  TO @WSRR_DB_USER@;
GRANT SELECT,INSERT,UPDATE,DELETE 
  ON @WSRR_DB_SCHEMA@.UISTATUSFLAG 
  TO @WSRR_DB_USER@;
GRANT SELECT,INSERT,UPDATE,DELETE
  ON @WSRR_DB_SCHEMA@.UIUSERSTORAGE
  TO @WSRR_DB_USER@;

SET CURRENT RULES = 'DB2' ;
