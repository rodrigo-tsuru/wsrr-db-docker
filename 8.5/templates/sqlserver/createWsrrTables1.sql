-- begin_generated_IBM_copyright_prolog

-- Licensed Materials - Property of IBM
-- 
-- 5724-N72 5655-WBS
-- 
-- Copyright IBM Corp. 2006, 2008 All Rights Reserved.
-- 
-- US Government Users Restricted Rights - Use, duplication or
-- disclosure restricted by GSA ADP Schedule Contract with
-- IBM Corp.

-- end_generated_IBM_copyright_prolog

------------------------------------------------
CREATE TABLE __DBSCHEMA__.SUBJECT (
    HASH     BIGINT         NOT NULL,
    URI      NVARCHAR(1024) NOT NULL,
    VERSION  BIGINT         NOT NULL DEFAULT 0,
    PRIMARY KEY (HASH)
);

CREATE TABLE __DBSCHEMA__.PREDICATE (
    HASH    BIGINT        NOT NULL,
    URI     NVARCHAR(1024)  NOT NULL, 
    PRIMARY KEY (HASH)
);

CREATE TABLE __DBSCHEMA__.OBJECT (
    HASH        BIGINT             NOT NULL,
    STRING      NVARCHAR(1024)    NOT NULL,
    LANG        NCHAR(2),
    DISTRICT    NCHAR(2),
    LVARIANT    NVARCHAR(254),
    CONTENT     IMAGE,
    PRIMARY KEY(HASH)
);

CREATE TABLE __DBSCHEMA__.GRAPH (
    HASH     BIGINT             NOT NULL,
    URI      NVARCHAR(1024)    NOT NULL,
    PRIMARY KEY(HASH)
);

CREATE TABLE __DBSCHEMA__.STATEMENT (
    SUBJ_HASH     BIGINT   NOT NULL,
    PRED_HASH     BIGINT   NOT NULL,
    OBJ_HASH      BIGINT   NOT NULL,
    OBJ_HASH_REL  BIGINT,
    OBJ_TYP_CD    SMALLINT NOT NULL
);

ALTER TABLE __DBSCHEMA__.STATEMENT ADD CONSTRAINT FK_STATEMENT_SUBJ FOREIGN KEY (SUBJ_HASH) references __DBSCHEMA__.SUBJECT(HASH);
ALTER TABLE __DBSCHEMA__.STATEMENT ADD CONSTRAINT FK_STATEMENT_OBJ_HASH_REL FOREIGN KEY (OBJ_HASH_REL) references __DBSCHEMA__.SUBJECT(HASH);
ALTER TABLE __DBSCHEMA__.STATEMENT ADD CONSTRAINT FK_STATEMENT_PRED FOREIGN KEY (PRED_HASH) references __DBSCHEMA__.PREDICATE(HASH);


CREATE TABLE __DBSCHEMA__.GSTATEMENT (
    SUBJ_HASH     BIGINT   NOT NULL,
    PRED_HASH     BIGINT   NOT NULL,
    OBJ_HASH      BIGINT   NOT NULL,
    OBJ_TYP_CD    SMALLINT NOT NULL,    
    LANG          NCHAR(2),
    GRAPH_HASH    BIGINT
);

ALTER TABLE __DBSCHEMA__.GSTATEMENT ADD CONSTRAINT FK_GSTATEMENT_SUBJ FOREIGN KEY (SUBJ_HASH) references __DBSCHEMA__.SUBJECT(HASH);
ALTER TABLE __DBSCHEMA__.GSTATEMENT ADD CONSTRAINT FK_GSTATEMENT_PRED FOREIGN KEY (PRED_HASH) references __DBSCHEMA__.PREDICATE(HASH);
ALTER TABLE __DBSCHEMA__.GSTATEMENT ADD CONSTRAINT FK_GSTATEMENT_GRAPH FOREIGN KEY (GRAPH_HASH) references __DBSCHEMA__.GRAPH(HASH);


CREATE TABLE __DBSCHEMA__.MOD_LOCK (
    ID INTEGER    NOT NULL,
    MLOCK INTEGER NOT NULL
);

INSERT INTO __DBSCHEMA__.MOD_LOCK (ID,MLOCK) VALUES (1,0);

----------------------------------------------------------
-- View that shows the STATEMENT table in its resolved state - that is, with full
-- text values for GRAPH, SUBJECT, PREDICATE, and OBJECT.  Intended only for service purposes.
----------------------------------------------------------       
       
CREATE NONCLUSTERED INDEX IDX_VALUE_LANG ON __DBSCHEMA__.OBJECT(LANG, DISTRICT, LVARIANT, HASH);

CREATE NONCLUSTERED INDEX IDX_STMT_OBJ_HASH_REL  ON __DBSCHEMA__.STATEMENT(OBJ_HASH_REL);
CREATE UNIQUE NONCLUSTERED INDEX IDX_STMT_SUBJ_PRED_OBJ ON __DBSCHEMA__.STATEMENT(SUBJ_HASH, PRED_HASH, OBJ_TYP_CD, OBJ_HASH);
CREATE UNIQUE NONCLUSTERED INDEX IDX_STMT_PRED_OBJ_SUBJ ON __DBSCHEMA__.STATEMENT(PRED_HASH, OBJ_HASH, OBJ_TYP_CD, SUBJ_HASH);
CREATE UNIQUE NONCLUSTERED INDEX IDX_STMT_OBJ_SUBJ_PRED ON __DBSCHEMA__.STATEMENT(OBJ_TYP_CD, OBJ_HASH, SUBJ_HASH, PRED_HASH);

CREATE UNIQUE NONCLUSTERED INDEX IDX_GSTMT_REL_SUBJ      ON __DBSCHEMA__.GSTATEMENT(SUBJ_HASH, OBJ_HASH, OBJ_TYP_CD, PRED_HASH, GRAPH_HASH, LANG);
CREATE UNIQUE NONCLUSTERED INDEX IDX_GSTMT_REL_OBJ       ON __DBSCHEMA__.GSTATEMENT(OBJ_HASH, PRED_HASH, OBJ_TYP_CD, SUBJ_HASH, GRAPH_HASH);
CREATE UNIQUE NONCLUSTERED INDEX IDX_GSTMT_GRAPH         ON __DBSCHEMA__.GSTATEMENT(GRAPH_HASH, SUBJ_HASH, PRED_HASH, OBJ_TYP_CD, OBJ_HASH);
CREATE UNIQUE NONCLUSTERED INDEX IDX_GSTMT_PRED          ON __DBSCHEMA__.GSTATEMENT(PRED_HASH, SUBJ_HASH, OBJ_HASH, OBJ_TYP_CD, GRAPH_HASH);
CREATE NONCLUSTERED INDEX IDX_GSTMT_PRED_OBJ_SUB  ON __DBSCHEMA__.GSTATEMENT(PRED_HASH ASC, OBJ_HASH ASC, SUBJ_HASH ASC);
CREATE NONCLUSTERED INDEX IDX_GSTMT_OBJ_SUBJ_PRED ON __DBSCHEMA__.GSTATEMENT(OBJ_HASH ASC, SUBJ_HASH ASC, PRED_HASH ASC);
CREATE UNIQUE NONCLUSTERED INDEX IDX_GSTMT_INSTANCE_ROW  ON __DBSCHEMA__.GSTATEMENT(SUBJ_HASH ASC, GRAPH_HASH ASC, OBJ_TYP_CD ASC, OBJ_HASH ASC, PRED_HASH ASC);


CREATE UNIQUE INDEX IDX_OBJ_STRING ON __DBSCHEMA__.OBJECT (HASH ASC) INCLUDE (STRING);
CREATE UNIQUE INDEX IDX_PRED_URI   ON __DBSCHEMA__.PREDICATE (HASH ASC) INCLUDE (URI);
CREATE UNIQUE INDEX IDX_GRAPH_URI  ON __DBSCHEMA__.GRAPH (HASH ASC) INCLUDE (URI);
CREATE UNIQUE INDEX IDX_SUBJ_URI   ON __DBSCHEMA__.SUBJECT (HASH ASC) INCLUDE (URI, VERSION);

GO -- remove this line if running through JDBC

CREATE VIEW __DBSCHEMA__.SVC_STATEMENT AS
    SELECT (select URI from __DBSCHEMA__.SUBJECT where HASH = st.SUBJ_HASH) SUBJECT,
    (select URI from __DBSCHEMA__.PREDICATE where HASH = st.PRED_HASH) PREDICATE, 
    CASE
        WHEN st.OBJ_TYP_CD IN (1,2,9,16) THEN (SELECT STRING from __DBSCHEMA__.OBJECT WHERE HASH=st.OBJ_HASH)
        WHEN st.OBJ_TYP_CD IN (17) THEN 'BLOB: ' + CAST(st.OBJ_HASH AS CHAR(25)) + ' (BYTELEN: ' + CAST((SELECT DATALENGTH(CONTENT) FROM __DBSCHEMA__.OBJECT WHERE HASH = st.OBJ_HASH) AS CHAR(25)) + ')'
        WHEN st.OBJ_TYP_CD IN (18) THEN 'LARGE STRING: ' + CAST(st.OBJ_HASH AS CHAR(25)) + ' (BYTELEN: ' + CAST((SELECT DATALENGTH(CONTENT) FROM __DBSCHEMA__.OBJECT WHERE HASH = st.OBJ_HASH) AS CHAR(25)) + ')'
        ELSE CAST(st.OBJ_HASH AS CHAR(25))
    END object,
    (SELECT URI from __DBSCHEMA__.GRAPH WHERE HASH=st.GRAPH_HASH) GRAPH,
    st.OBJ_TYP_CD OBJ_TYP_CD, st.SUBJ_HASH SUBJ_HASH, st.PRED_HASH PRED_HASH, st.OBJ_HASH OBJ_HASH, st.OBJ_HASH_REL OBJ_HASH_REL, st.GRAPH_HASH GRAPH_HASH, st.LANG LANG
    FROM 
        (select SUBJ_HASH, PRED_HASH, OBJ_HASH, cast(null as bigint) as GRAPH_HASH, OBJ_TYP_CD, cast(null as CHAR(2)) as LANG, OBJ_HASH_REL from __DBSCHEMA__.STATEMENT
        UNION ALL
        select SUBJ_HASH, PRED_HASH, OBJ_HASH, GRAPH_HASH, OBJ_TYP_CD, LANG, cast(null as bigint) as OBJ_HASH_REL from __DBSCHEMA__.GSTATEMENT) st;    
    


GO -- remove this line if running through JDBC
